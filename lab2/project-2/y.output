State 1 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: varExp
    3    | nilExp
    4    | intExp
    5    | stringExp
    6    | callExp
    7    | opExp
    8    | recordExp
    9    | seqExp
   10    | assignExp
   11    | ifExp
   12    | whileExp
   13    | forExp
   14    | breakExp
   15    | letExp
   16    | arrayExp

   17 varExp: lvalue

   18 nilExp: NIL

   19 intExp: INT

   20 stringExp: STRING

   21 callExp: ID LPAREN argList RPAREN

   22 opExp: exp PLUS exp
   23      | exp MINUS exp
   24      | exp TIMES exp
   25      | exp DIVIDE exp
   26      | exp EQ exp
   27      | exp NEQ exp
   28      | exp LT exp
   29      | exp LE exp
   30      | exp GT exp
   31      | exp GE exp
   32      | MINUS exp

   33 recordExp: ID LBRACE efieldList RBRACE

   34 seqExp: LPAREN seqList RPAREN

   35 assignExp: lvalue ASSIGN exp

   36 ifExp: IF exp THEN exp ELSE exp
   37      | IF exp THEN exp
   38      | exp OR exp
   39      | exp AND exp

   40 whileExp: WHILE exp DO exp

   41 forExp: FOR ID ASSIGN exp TO exp DO exp

   42 breakExp: BREAK

   43 letExp: LET decList IN seqList END

   44 arrayExp: ID LBRACK exp RBRACK OF exp

   45 lvalue: ID
   46       | lvalue DOT ID
   47       | lvalue LBRACK exp RBRACK
   48       | ID LBRACK exp RBRACK

   49 argList: %empty
   50        | exp argList_

   51 argList_: %empty
   52         | COMMA exp argList_

   53 efield: ID EQ exp

   54 efieldList: %empty
   55           | efield efieldList_

   56 efieldList_: %empty
   57            | COMMA efield efieldList_

   58 seqList: %empty
   59        | exp
   60        | exp SEMICOLON seqList

   61 decList: dec
   62        | dec decList

   63 dec: typeDec
   64    | varDec
   65    | funcDec

   66 typeDec: nametyList

   67 varDec: VAR ID ASSIGN exp
   68       | VAR ID COLON ID ASSIGN exp

   69 funcDec: funcDecList

   70 funcDecList: funcDec_
   71            | funcDec_ funcDecList

   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp
   73         | FUNCTION ID LPAREN fieldList RPAREN EQ exp

   74 nametyList: namety
   75           | namety nametyList

   76 namety: TYPE ID EQ ID
   77       | TYPE ID EQ LBRACE fieldList RBRACE
   78       | TYPE ID EQ ARRAY OF ID

   79 field: ID COLON ID

   80 fieldList: %empty
   81          | field fieldList_

   82 fieldList_: %empty
   83           | COMMA field fieldList_


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID <sval> (258) 21 33 41 44 45 46 48 53 67 68 72 73 76 77 78 79
    STRING <sval> (259) 20
    INT <ival> (260) 19
    COMMA (261) 52 57 83
    COLON (262) 68 72 79
    SEMICOLON (263) 60
    LPAREN (264) 21 34 72 73
    RPAREN (265) 21 34 72 73
    LBRACK (266) 44 47 48
    RBRACK (267) 44 47 48
    LBRACE (268) 33 77
    RBRACE (269) 33 77
    DOT (270) 46
    PLUS (271) 22
    MINUS (272) 23 32
    TIMES (273) 24
    DIVIDE (274) 25
    EQ (275) 26 53 72 73 76 77 78
    NEQ (276) 27
    LT (277) 28
    LE (278) 29
    GT (279) 30
    GE (280) 31
    AND (281) 39
    OR (282) 38
    ASSIGN (283) 35 41 67 68
    ARRAY (284) 78
    IF (285) 36 37
    THEN (286) 36 37
    ELSE (287) 36
    WHILE (288) 40
    FOR (289) 41
    TO (290) 41
    DO (291) 40 41
    LET (292) 43
    IN (293) 43
    END (294) 43
    OF (295) 44 78
    BREAK (296) 42
    NIL (297) 18
    FUNCTION (298) 72 73
    VAR (299) 67 68
    TYPE (300) 76 77 78
    LOWER (301)


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program <exp> (48)
        on left: 1
        on right: 0
    exp <exp> (49)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
        on right: 1 22 23 24 25 26 27 28 29 30 31 32 35 36 37 38 39 40 41 44 47 48 50 52 53 59 60 67 68 72 73
    varExp <exp> (50)
        on left: 17
        on right: 2
    nilExp <exp> (51)
        on left: 18
        on right: 3
    intExp <exp> (52)
        on left: 19
        on right: 4
    stringExp <exp> (53)
        on left: 20
        on right: 5
    callExp <exp> (54)
        on left: 21
        on right: 6
    opExp <exp> (55)
        on left: 22 23 24 25 26 27 28 29 30 31 32
        on right: 7
    recordExp <exp> (56)
        on left: 33
        on right: 8
    seqExp <exp> (57)
        on left: 34
        on right: 9
    assignExp <exp> (58)
        on left: 35
        on right: 10
    ifExp <exp> (59)
        on left: 36 37 38 39
        on right: 11
    whileExp <exp> (60)
        on left: 40
        on right: 12
    forExp <exp> (61)
        on left: 41
        on right: 13
    breakExp <exp> (62)
        on left: 42
        on right: 14
    letExp <exp> (63)
        on left: 43
        on right: 15
    arrayExp <exp> (64)
        on left: 44
        on right: 16
    lvalue <var> (65)
        on left: 45 46 47 48
        on right: 17 35 46 47
    argList <expList> (66)
        on left: 49 50
        on right: 21
    argList_ <expList> (67)
        on left: 51 52
        on right: 50 52
    efield <efield> (68)
        on left: 53
        on right: 55 57
    efieldList <efieldList> (69)
        on left: 54 55
        on right: 33
    efieldList_ <efieldList> (70)
        on left: 56 57
        on right: 55 57
    seqList <expList> (71)
        on left: 58 59 60
        on right: 34 43 60
    decList <decList> (72)
        on left: 61 62
        on right: 43 62
    dec <dec> (73)
        on left: 63 64 65
        on right: 61 62
    typeDec <dec> (74)
        on left: 66
        on right: 63
    varDec <dec> (75)
        on left: 67 68
        on right: 64
    funcDec <dec> (76)
        on left: 69
        on right: 65
    funcDecList <funcdecList> (77)
        on left: 70 71
        on right: 69 71
    funcDec_ <funcdec> (78)
        on left: 72 73
        on right: 70 71
    nametyList <nametyList> (79)
        on left: 74 75
        on right: 66 75
    namety <namety> (80)
        on left: 76 77 78
        on right: 74 75
    field <field> (81)
        on left: 79
        on right: 81 83
    fieldList <fieldList> (82)
        on left: 80 81
        on right: 72 73 77
    fieldList_ <fieldList> (83)
        on left: 82 83
        on right: 81 83


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 1

   21 callExp: ID . LPAREN argList RPAREN
   33 recordExp: ID . LBRACE efieldList RBRACE
   44 arrayExp: ID . LBRACK exp RBRACK OF exp
   45 lvalue: ID .
   48       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 30
    LBRACK  shift, and go to state 31
    LBRACE  shift, and go to state 32

    LBRACK    [reduce using rule 45 (lvalue)]
    $default  reduce using rule 45 (lvalue)


State 2

   20 stringExp: STRING .

    $default  reduce using rule 20 (stringExp)


State 3

   19 intExp: INT .

    $default  reduce using rule 19 (intExp)


State 4

   34 seqExp: LPAREN . seqList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (seqList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29
    seqList    go to state 34


State 5

   32 opExp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 35
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 6

   36 ifExp: IF . exp THEN exp ELSE exp
   37      | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 36
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 7

   40 whileExp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 37
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 8

   41 forExp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 38


State 9

   43 letExp: LET . decList IN seqList END

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    decList      go to state 42
    dec          go to state 43
    typeDec      go to state 44
    varDec       go to state 45
    funcDec      go to state 46
    funcDecList  go to state 47
    funcDec_     go to state 48
    nametyList   go to state 49
    namety       go to state 50


State 10

   42 breakExp: BREAK .

    $default  reduce using rule 42 (breakExp)


State 11

   18 nilExp: NIL .

    $default  reduce using rule 18 (nilExp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 51


State 13

    1 program: exp .
   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 1 (program)


State 14

    2 exp: varExp .

    $default  reduce using rule 2 (exp)


State 15

    3 exp: nilExp .

    $default  reduce using rule 3 (exp)


State 16

    4 exp: intExp .

    $default  reduce using rule 4 (exp)


State 17

    5 exp: stringExp .

    $default  reduce using rule 5 (exp)


State 18

    6 exp: callExp .

    $default  reduce using rule 6 (exp)


State 19

    7 exp: opExp .

    $default  reduce using rule 7 (exp)


State 20

    8 exp: recordExp .

    $default  reduce using rule 8 (exp)


State 21

    9 exp: seqExp .

    $default  reduce using rule 9 (exp)


State 22

   10 exp: assignExp .

    $default  reduce using rule 10 (exp)


State 23

   11 exp: ifExp .

    $default  reduce using rule 11 (exp)


State 24

   12 exp: whileExp .

    $default  reduce using rule 12 (exp)


State 25

   13 exp: forExp .

    $default  reduce using rule 13 (exp)


State 26

   14 exp: breakExp .

    $default  reduce using rule 14 (exp)


State 27

   15 exp: letExp .

    $default  reduce using rule 15 (exp)


State 28

   16 exp: arrayExp .

    $default  reduce using rule 16 (exp)


State 29

   17 varExp: lvalue .
   35 assignExp: lvalue . ASSIGN exp
   46 lvalue: lvalue . DOT ID
   47       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 64
    DOT     shift, and go to state 65
    ASSIGN  shift, and go to state 66

    $default  reduce using rule 17 (varExp)


State 30

   21 callExp: ID LPAREN . argList RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 49 (argList)

    exp        go to state 67
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29
    argList    go to state 68


State 31

   44 arrayExp: ID LBRACK . exp RBRACK OF exp
   48 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 69
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 32

   33 recordExp: ID LBRACE . efieldList RBRACE

    ID  shift, and go to state 70

    $default  reduce using rule 54 (efieldList)

    efield      go to state 71
    efieldList  go to state 72


State 33

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   59 seqList: exp .
   60        | exp . SEMICOLON seqList

    SEMICOLON  shift, and go to state 73
    PLUS       shift, and go to state 52
    MINUS      shift, and go to state 53
    TIMES      shift, and go to state 54
    DIVIDE     shift, and go to state 55
    EQ         shift, and go to state 56
    NEQ        shift, and go to state 57
    LT         shift, and go to state 58
    LE         shift, and go to state 59
    GT         shift, and go to state 60
    GE         shift, and go to state 61
    AND        shift, and go to state 62
    OR         shift, and go to state 63

    $default  reduce using rule 59 (seqList)


State 34

   34 seqExp: LPAREN seqList . RPAREN

    RPAREN  shift, and go to state 74


State 35

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   32      | MINUS exp .
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 32 (opExp)


State 36

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp . THEN exp ELSE exp
   37      | IF exp . THEN exp
   38      | exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    THEN    shift, and go to state 75


State 37

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   40 whileExp: WHILE exp . DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    DO      shift, and go to state 76


State 38

   41 forExp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 77


State 39

   72 funcDec_: FUNCTION . ID LPAREN fieldList RPAREN COLON ID EQ exp
   73         | FUNCTION . ID LPAREN fieldList RPAREN EQ exp

    ID  shift, and go to state 78


State 40

   67 varDec: VAR . ID ASSIGN exp
   68       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 79


State 41

   76 namety: TYPE . ID EQ ID
   77       | TYPE . ID EQ LBRACE fieldList RBRACE
   78       | TYPE . ID EQ ARRAY OF ID

    ID  shift, and go to state 80


State 42

   43 letExp: LET decList . IN seqList END

    IN  shift, and go to state 81


State 43

   61 decList: dec .
   62        | dec . decList

    FUNCTION  shift, and go to state 39
    VAR       shift, and go to state 40
    TYPE      shift, and go to state 41

    $default  reduce using rule 61 (decList)

    decList      go to state 82
    dec          go to state 43
    typeDec      go to state 44
    varDec       go to state 45
    funcDec      go to state 46
    funcDecList  go to state 47
    funcDec_     go to state 48
    nametyList   go to state 49
    namety       go to state 50


State 44

   63 dec: typeDec .

    $default  reduce using rule 63 (dec)


State 45

   64 dec: varDec .

    $default  reduce using rule 64 (dec)


State 46

   65 dec: funcDec .

    $default  reduce using rule 65 (dec)


State 47

   69 funcDec: funcDecList .

    $default  reduce using rule 69 (funcDec)


State 48

   70 funcDecList: funcDec_ .
   71            | funcDec_ . funcDecList

    FUNCTION  shift, and go to state 39

    $default  reduce using rule 70 (funcDecList)

    funcDecList  go to state 83
    funcDec_     go to state 48


State 49

   66 typeDec: nametyList .

    $default  reduce using rule 66 (typeDec)


State 50

   74 nametyList: namety .
   75           | namety . nametyList

    TYPE  shift, and go to state 41

    $default  reduce using rule 74 (nametyList)

    nametyList  go to state 84
    namety      go to state 50


State 51

    0 $accept: program $end .

    $default  accept


State 52

   22 opExp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 53

   23 opExp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 54

   24 opExp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 55

   25 opExp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 56

   26 opExp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 57

   27 opExp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 58

   28 opExp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 91
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 59

   29 opExp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 92
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 60

   30 opExp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 93
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 61

   31 opExp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 94
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 62

   39 ifExp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 95
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 63

   38 ifExp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 96
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 64

   47 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 97
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 65

   46 lvalue: lvalue DOT . ID

    ID  shift, and go to state 98


State 66

   35 assignExp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 99
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 67

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   50 argList: exp . argList_

    COMMA   shift, and go to state 100
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 51 (argList_)

    argList_  go to state 101


State 68

   21 callExp: ID LPAREN argList . RPAREN

    RPAREN  shift, and go to state 102


State 69

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   44 arrayExp: ID LBRACK exp . RBRACK OF exp
   48 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 103
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 70

   53 efield: ID . EQ exp

    EQ  shift, and go to state 104


State 71

   55 efieldList: efield . efieldList_

    COMMA  shift, and go to state 105

    $default  reduce using rule 56 (efieldList_)

    efieldList_  go to state 106


State 72

   33 recordExp: ID LBRACE efieldList . RBRACE

    RBRACE  shift, and go to state 107


State 73

   60 seqList: exp SEMICOLON . seqList

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (seqList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29
    seqList    go to state 108


State 74

   34 seqExp: LPAREN seqList RPAREN .

    $default  reduce using rule 34 (seqExp)


State 75

   36 ifExp: IF exp THEN . exp ELSE exp
   37      | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 109
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 76

   40 whileExp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 110
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 77

   41 forExp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 111
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 78

   72 funcDec_: FUNCTION ID . LPAREN fieldList RPAREN COLON ID EQ exp
   73         | FUNCTION ID . LPAREN fieldList RPAREN EQ exp

    LPAREN  shift, and go to state 112


State 79

   67 varDec: VAR ID . ASSIGN exp
   68       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 113
    ASSIGN  shift, and go to state 114


State 80

   76 namety: TYPE ID . EQ ID
   77       | TYPE ID . EQ LBRACE fieldList RBRACE
   78       | TYPE ID . EQ ARRAY OF ID

    EQ  shift, and go to state 115


State 81

   43 letExp: LET decList IN . seqList END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 58 (seqList)

    exp        go to state 33
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29
    seqList    go to state 116


State 82

   62 decList: dec decList .

    $default  reduce using rule 62 (decList)


State 83

   71 funcDecList: funcDec_ funcDecList .

    $default  reduce using rule 71 (funcDecList)


State 84

   75 nametyList: namety nametyList .

    $default  reduce using rule 75 (nametyList)


State 85

   22 opExp: exp . PLUS exp
   22      | exp PLUS exp .
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 22 (opExp)


State 86

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   23      | exp MINUS exp .
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    $default  reduce using rule 23 (opExp)


State 87

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   24      | exp TIMES exp .
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    $default  reduce using rule 24 (opExp)


State 88

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   25      | exp DIVIDE exp .
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    $default  reduce using rule 25 (opExp)


State 89

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   26      | exp EQ exp .
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (opExp)


State 90

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   27      | exp NEQ exp .
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 27 (opExp)


State 91

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   28      | exp LT exp .
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 28 (opExp)


State 92

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   29      | exp LE exp .
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 29 (opExp)


State 93

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   30      | exp GT exp .
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 30 (opExp)


State 94

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   31      | exp GE exp .
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 31 (opExp)


State 95

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   39      | exp AND exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61

    $default  reduce using rule 39 (ifExp)


State 96

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   38      | exp OR exp .
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61

    $default  reduce using rule 38 (ifExp)


State 97

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   47 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 117
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63


State 98

   46 lvalue: lvalue DOT ID .

    $default  reduce using rule 46 (lvalue)


State 99

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   35 assignExp: lvalue ASSIGN exp .
   38 ifExp: exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 35 (assignExp)


State 100

   52 argList_: COMMA . exp argList_

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 118
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 101

   50 argList: exp argList_ .

    $default  reduce using rule 50 (argList)


State 102

   21 callExp: ID LPAREN argList RPAREN .

    $default  reduce using rule 21 (callExp)


State 103

   44 arrayExp: ID LBRACK exp RBRACK . OF exp
   48 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 119

    $default  reduce using rule 48 (lvalue)


State 104

   53 efield: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 120
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 105

   57 efieldList_: COMMA . efield efieldList_

    ID  shift, and go to state 70

    efield  go to state 121


State 106

   55 efieldList: efield efieldList_ .

    $default  reduce using rule 55 (efieldList)


State 107

   33 recordExp: ID LBRACE efieldList RBRACE .

    $default  reduce using rule 33 (recordExp)


State 108

   60 seqList: exp SEMICOLON seqList .

    $default  reduce using rule 60 (seqList)


State 109

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp THEN exp . ELSE exp
   37      | IF exp THEN exp .
   38      | exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    ELSE    shift, and go to state 122

    $default  reduce using rule 37 (ifExp)


State 110

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   40 whileExp: WHILE exp DO exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 40 (whileExp)


State 111

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   41 forExp: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    TO      shift, and go to state 123


State 112

   72 funcDec_: FUNCTION ID LPAREN . fieldList RPAREN COLON ID EQ exp
   73         | FUNCTION ID LPAREN . fieldList RPAREN EQ exp

    ID  shift, and go to state 124

    $default  reduce using rule 80 (fieldList)

    field      go to state 125
    fieldList  go to state 126


State 113

   68 varDec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 127


State 114

   67 varDec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 128
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 115

   76 namety: TYPE ID EQ . ID
   77       | TYPE ID EQ . LBRACE fieldList RBRACE
   78       | TYPE ID EQ . ARRAY OF ID

    ID      shift, and go to state 129
    LBRACE  shift, and go to state 130
    ARRAY   shift, and go to state 131


State 116

   43 letExp: LET decList IN seqList . END

    END  shift, and go to state 132


State 117

   47 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 47 (lvalue)


State 118

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   52 argList_: COMMA exp . argList_

    COMMA   shift, and go to state 100
    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 51 (argList_)

    argList_  go to state 133


State 119

   44 arrayExp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 134
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 120

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   53 efield: ID EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 53 (efield)


State 121

   57 efieldList_: COMMA efield . efieldList_

    COMMA  shift, and go to state 105

    $default  reduce using rule 56 (efieldList_)

    efieldList_  go to state 135


State 122

   36 ifExp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 136
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 123

   41 forExp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 137
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 124

   79 field: ID . COLON ID

    COLON  shift, and go to state 138


State 125

   81 fieldList: field . fieldList_

    COMMA  shift, and go to state 139

    $default  reduce using rule 82 (fieldList_)

    fieldList_  go to state 140


State 126

   72 funcDec_: FUNCTION ID LPAREN fieldList . RPAREN COLON ID EQ exp
   73         | FUNCTION ID LPAREN fieldList . RPAREN EQ exp

    RPAREN  shift, and go to state 141


State 127

   68 varDec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 142


State 128

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   67 varDec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 67 (varDec)


State 129

   76 namety: TYPE ID EQ ID .

    $default  reduce using rule 76 (namety)


State 130

   77 namety: TYPE ID EQ LBRACE . fieldList RBRACE

    ID  shift, and go to state 124

    $default  reduce using rule 80 (fieldList)

    field      go to state 125
    fieldList  go to state 143


State 131

   78 namety: TYPE ID EQ ARRAY . OF ID

    OF  shift, and go to state 144


State 132

   43 letExp: LET decList IN seqList END .

    $default  reduce using rule 43 (letExp)


State 133

   52 argList_: COMMA exp argList_ .

    $default  reduce using rule 52 (argList_)


State 134

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   44 arrayExp: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 44 (arrayExp)


State 135

   57 efieldList_: COMMA efield efieldList_ .

    $default  reduce using rule 57 (efieldList_)


State 136

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   36 ifExp: IF exp THEN exp ELSE exp .
   38      | exp . OR exp
   39      | exp . AND exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 36 (ifExp)


State 137

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   41 forExp: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63
    DO      shift, and go to state 145


State 138

   79 field: ID COLON . ID

    ID  shift, and go to state 146


State 139

   83 fieldList_: COMMA . field fieldList_

    ID  shift, and go to state 124

    field  go to state 147


State 140

   81 fieldList: field fieldList_ .

    $default  reduce using rule 81 (fieldList)


State 141

   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN . COLON ID EQ exp
   73         | FUNCTION ID LPAREN fieldList RPAREN . EQ exp

    COLON  shift, and go to state 148
    EQ     shift, and go to state 149


State 142

   68 varDec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 150
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 143

   77 namety: TYPE ID EQ LBRACE fieldList . RBRACE

    RBRACE  shift, and go to state 151


State 144

   78 namety: TYPE ID EQ ARRAY OF . ID

    ID  shift, and go to state 152


State 145

   41 forExp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 153
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 146

   79 field: ID COLON ID .

    $default  reduce using rule 79 (field)


State 147

   83 fieldList_: COMMA field . fieldList_

    COMMA  shift, and go to state 139

    $default  reduce using rule 82 (fieldList_)

    fieldList_  go to state 154


State 148

   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON . ID EQ exp

    ID  shift, and go to state 155


State 149

   73 funcDec_: FUNCTION ID LPAREN fieldList RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 156
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 150

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   68 varDec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 68 (varDec)


State 151

   77 namety: TYPE ID EQ LBRACE fieldList RBRACE .

    $default  reduce using rule 77 (namety)


State 152

   78 namety: TYPE ID EQ ARRAY OF ID .

    $default  reduce using rule 78 (namety)


State 153

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   41 forExp: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 41 (forExp)


State 154

   83 fieldList_: COMMA field fieldList_ .

    $default  reduce using rule 83 (fieldList_)


State 155

   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 157


State 156

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   73 funcDec_: FUNCTION ID LPAREN fieldList RPAREN EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 73 (funcDec_)


State 157

   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 158
    varExp     go to state 14
    nilExp     go to state 15
    intExp     go to state 16
    stringExp  go to state 17
    callExp    go to state 18
    opExp      go to state 19
    recordExp  go to state 20
    seqExp     go to state 21
    assignExp  go to state 22
    ifExp      go to state 23
    whileExp   go to state 24
    forExp     go to state 25
    breakExp   go to state 26
    letExp     go to state 27
    arrayExp   go to state 28
    lvalue     go to state 29


State 158

   22 opExp: exp . PLUS exp
   23      | exp . MINUS exp
   24      | exp . TIMES exp
   25      | exp . DIVIDE exp
   26      | exp . EQ exp
   27      | exp . NEQ exp
   28      | exp . LT exp
   29      | exp . LE exp
   30      | exp . GT exp
   31      | exp . GE exp
   38 ifExp: exp . OR exp
   39      | exp . AND exp
   72 funcDec_: FUNCTION ID LPAREN fieldList RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 52
    MINUS   shift, and go to state 53
    TIMES   shift, and go to state 54
    DIVIDE  shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LT      shift, and go to state 58
    LE      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    AND     shift, and go to state 62
    OR      shift, and go to state 63

    $default  reduce using rule 72 (funcDec_)
